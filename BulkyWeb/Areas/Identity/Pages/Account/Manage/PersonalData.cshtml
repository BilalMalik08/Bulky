@page
@model PersonalDataModel
@{
    ViewData["Title"] = "Personal Data";
    ViewData["ActivePage"] = ManageNavPages.PersonalData;
}

<div class="bg-primary text-white p-3">
    <h3 class="text-center">
        <i class="bi bi-file-person-fill"></i> @ViewData["Title"]
    </h3>
</div>

<div class="container my-5">
    <div class="row">
        <div class="col-md-4">
            <!-- Navigation Links -->
            @inject SignInManager<IdentityUser> SignInManager
            @{
                var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
            }
            <ul class="nav nav-pills flex-column">
                <li class="nav-item">
                    <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext) @(ViewData["ActivePage"]?.ToString() == "Index" ? "bg-secondary text-white" : "")" id="profile" asp-page="./Index">
                        <i class="bi bi-person-circle"></i> Profile
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext) @(ViewData["ActivePage"]?.ToString() == "Email" ? "bg-secondary text-white" : "")" id="email" asp-page="./Email">
                        <i class="bi bi-envelope-fill"></i> Email
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext) @(ViewData["ActivePage"]?.ToString() == "ChangePassword" ? "bg-secondary text-white" : "")" id="change-password" asp-page="./ChangePassword">
                        <i class="bi bi-lock-fill"></i> Password
                    </a>
                </li>
                @if (hasExternalLogins)
                {
                    <li id="external-logins" class="nav-item">
                        <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext) @(ViewData["ActivePage"]?.ToString() == "ExternalLogins" ? "bg-secondary text-white" : "")" asp-page="./ExternalLogins">
                            <i class="bi bi-box-arrow-in-right"></i> External logins
                        </a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext) @(ViewData["ActivePage"]?.ToString() == "TwoFactorAuthentication" ? "bg-secondary text-white" : "")" id="two-factor" asp-page="./TwoFactorAuthentication">
                        <i class="bi bi-shield-lock-fill"></i> Two-factor authentication
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext) @(ViewData["ActivePage"]?.ToString() == "PersonalData" ? "bg-secondary text-white" : "")" id="personal-data" asp-page="./PersonalData">
                        <i class="bi bi-file-person-fill"></i> Personal data
                    </a>
                </li>
            </ul>
        </div>

        <div class="col-md-6">
            <div class="bg-primary text-white p-4 shadow-sm rounded">
                <p>Your account contains personal data that you have given us. This page allows you to download or delete that data.</p>
                <p class="text-danger">
                    <strong>Deleting this data will permanently remove your account, and this cannot be recovered.</strong>
                </p>
                <form id="download-data" asp-page="DownloadPersonalData" method="post">
                    <button class="btn btn-secondary w-100 mb-3" type="submit">
                        <i class="bi bi-download"></i> Download
                    </button>
                </form>
                <p>
                    <a id="delete" asp-page="DeletePersonalData" class="btn btn-danger w-100">
                        <i class="bi bi-trash"></i> Delete
                    </a>
                </p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
