// <auto-generated />
using Bulky.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bulky.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240815194822_UpdatedCategoryAndProductTables")]
    partial class UpdatedCategoryAndProductTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bulky.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 7,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 8,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 9,
                            Name = "Nature"
                        });
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Billy Spark",
                            CategoryId = 4,
                            Description = "Explore the delicate dance between destiny and choice in this gripping tale of time travel and its profound effects on the lives it touches. A journey through the ages where every decision alters the future.",
                            ISBN = "SWD9999001",
                            ImageUrl = "",
                            ListPrice = 999.0,
                            Price = 900.0,
                            Price100 = 800.0,
                            Price50 = 850.0,
                            Title = "Fortune of Time"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Nancy Hoover",
                            CategoryId = 5,
                            Description = "A haunting narrative of survival and hope in a world overshadowed by chaos. Follow the characters as they navigate through ominous landscapes and uncover secrets that could change everything.",
                            ISBN = "CAW777777701",
                            ImageUrl = "",
                            ListPrice = 400.0,
                            Price = 300.0,
                            Price100 = 200.0,
                            Price50 = 250.0,
                            Title = "Dark Skies"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Julian Button",
                            CategoryId = 6,
                            Description = "A heartwarming story of love, loss, and self-discovery, set against the backdrop of breathtaking sunsets. A tale that will make you believe in the power of new beginnings.",
                            ISBN = "RITO5555501",
                            ImageUrl = "",
                            ListPrice = 550.0,
                            Price = 500.0,
                            Price100 = 350.0,
                            Price50 = 400.0,
                            Title = "Vanish in the Sunset"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Abby Muscles",
                            CategoryId = 7,
                            Description = "Dive into a sweet and whimsical world where dreams are spun into reality. This enchanting tale captures the innocence of childhood and the joy of seeing magic in everyday life.",
                            ISBN = "WS3333333301",
                            ImageUrl = "",
                            ListPrice = 700.0,
                            Price = 650.0,
                            Price100 = 550.0,
                            Price50 = 600.0,
                            Title = "Cotton Candy"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Ron Parker",
                            CategoryId = 8,
                            Description = "An inspiring story of resilience and strength, set on the rugged shores where land meets sea. This novel explores the timeless battle between the elements and the human spirit.",
                            ISBN = "SOTJ1111111101",
                            ImageUrl = "",
                            ListPrice = 300.0,
                            Price = 270.0,
                            Price100 = 200.0,
                            Price50 = 250.0,
                            Title = "Rock in the Ocean"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Laura Phantom",
                            CategoryId = 9,
                            Description = "Step into a world of natural beauty and hidden mysteries. This lyrical narrative weaves together tales of wonder and wisdom, all inspired by the simple, yet profound, beauty of nature.",
                            ISBN = "FOT000000001",
                            ImageUrl = "",
                            ListPrice = 250.0,
                            Price = 230.0,
                            Price100 = 200.0,
                            Price50 = 220.0,
                            Title = "Leaves and Wonders"
                        });
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.HasOne("Bulky.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
